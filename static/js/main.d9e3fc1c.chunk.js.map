{"version":3,"sources":["utils.js","components/CellMeeple.js","components/Grid.js","components/Cell.js","components/Board.js","components/Meeple.js","components/Player.js","App.js","reportWebVitals.js","index.js"],"names":["rightShift","arr","n","result","length","i","getNewTile","tiles","Math","floor","random","CellMeeple","p","phase","selectedMeeple","placeMeeple","currentCell","setTemp","temp","selectMeeple","meeple","removeMeeple","cell","currentPlayer","useState","onHover","setOnHover","selected","setSelected","className","onMouseEnter","onMouseLeave","style","backgroundImage","img","onClick","background","color","e","preventDefault","stopPropagation","Grid","positions","tempSelected","setTempSelected","map","Cell","gameState","isValid","isPlaced","placeTile","id","value","borders","currentTile","tempBorders","setTempBorders","deg","setDeg","useEffect","cellBorders","currBorders","b","join","checkRotation","opacity","transform","prev","Board","setGameState","top","bottom","right","left","newBoard","board","slice","pos","player","newPosition","newMeeples","players","name","meeples","filter","m","cellMeeple","placedTiles","includes","emptyCells","Meeple","src","alt","Player","border","x","split","Array","fill","initialState","tileSet","phases","App","placed","empty","reduce","tile","t","r","l","undefined","output","currentBorders","push","valid","newTile","newTileSet","changePlayer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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QnB,IAAK,gBACxB,CAAEmB,QAAS,OAAQnB,IAAK,gBACxB,CAAEmB,QAAS,OAAQnB,IAAK,gBACxB,CAAEmB,QAAS,OAAQnB,IAAK,aACxB,CAAEmB,QAAS,OAAQnB,IAAK,aACxB,CAAEmB,QAAS,OAAQnB,IAAK,aACxB,CAAEmB,QAAS,OAAQnB,IAAK,aACxB,CAAEmB,QAAS,OAAQnB,IAAK,aACxB,CAAEmB,QAAS,OAAQnB,IAAK,gBACxB,CAAEmB,QAAS,OAAQnB,IAAK,gBACxB,CAAEmB,QAAS,OAAQnB,IAAK,gBACxB,CAAEmB,QAAS,OAAQnB,IAAK,gBACxB,CAAEmB,QAAS,OAAQnB,IAAK,gBACxB,CAAEmB,QAAS,OAAQnB,IAAK,gBACxB,CAAEmB,QAAS,OAAQnB,IAAK,iBACxB,CAAEmB,QAAS,OAAQnB,IAAK,iBACxB,CAAEmB,QAAS,OAAQnB,IAAK,iBACxB,CAAEmB,QAAS,OAAQnB,IAAK,gBACxB,CAAEmB,QAAS,OAAQnB,IAAK,gBACxB,CAAEmB,QAAS,OAAQnB,IAAK,gBACxB,CAAEmB,QAAS,OAAQnB,IAAK,gBACxB,CAAEmB,QAAS,OAAQnB,IAAK,eACxB,CAAEmB,QAAS,OAAQnB,IAAK,eACxB,CAAEmB,QAAS,OAAQnB,IAAK,eACxB,CAAEmB,QAAS,OAAQnB,IAAK,eACxB,CAAEmB,QAAS,OAAQnB,IAAK,eACxB,CAAEmB,QAAS,OAAQnB,IAAK,eACxB,CAAEmB,QAAS,OAAQnB,IAAK,eACxB,CAAEmB,QAAS,OAAQnB,IAAK,eACxB,CAAEmB,QAAS,OAAQnB,IAAK,eACxB,CAAEmB,QAAS,OAAQnB,IAAK,eACxB,CAAEmB,QAAS,OAAQnB,IAAK,eACxB,CAAEmB,QAAS,OAAQnB,IAAK,eACxB,CAAEmB,QAAS,OAAQnB,IAAK,eACxB,CAAEmB,QAAS,OAAQnB,IAAK,eACxB,CAAEmB,QAAS,OAAQnB,IAAK,eACxB,CAAEmB,QAAS,OAAQnB,IAAK,eACxB,CAAEmB,QAAS,OAAQnB,IAAK,eACxB,CAAEmB,QAAS,OAAQnB,IAAK,aACxB,CAAEmB,QAAS,OAAQnB,IAAK,aACxB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","file":"static/js/main.d9e3fc1c.chunk.js","sourcesContent":["export const rightShift = (arr, n) => {\r\n  const result = [];\r\n  if (n > arr.length) {\r\n    n = n % arr.length;\r\n  }\r\n  for (let i = 0; i < arr.length; i++) {\r\n    if (i + n > arr.length - 1) {\r\n      result[n - (arr.length - i)] = arr[i];\r\n    } else {\r\n      result[i + n] = arr[i];\r\n    }\r\n  }\r\n  return result;\r\n}\r\nexport const findEmpty = (selected, board) => {\r\n  return selected\r\n    .reduce((emptyCells, tile) => {\r\n      const t = tile.id - 20;\r\n      const r = tile.id + 1;\r\n      const b = tile.id + 20;\r\n      const l = tile.id - 1;\r\n      return [...emptyCells, board[t], board[r], board[b], board[l]];\r\n    }, [])\r\n    .filter(x => x !== undefined && x.value !== 1);\r\n};\r\nexport const valid = (cell, currentTile) => {\r\n  const output = [];\r\n  for (let i = 0; i < 4; i++) {\r\n    const currentShifted = rightShift(currentTile.borders, i);\r\n    const currentBorders = currentShifted.map((b, id) =>\r\n      cell.borders[id] === 0 ? 0 : b\r\n    );\r\n    if (currentBorders.join(\"\") === cell.borders.join(\"\")) {\r\n      output.push(currentBorders);\r\n    }\r\n  }\r\n  if (output.length) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\nexport const checkRotation = (cellBorders, currBorders) => {\r\n  for (let i = 0; i < 4; i++) {\r\n    const currentShifted = rightShift(currBorders, i);\r\n    const currentBorders = currentShifted.map((b, id) =>\r\n      cellBorders[id] === 0 ? 0 : b\r\n    );\r\n    if (currentBorders.join(\"\") === cellBorders.join(\"\")) {\r\n      return i;\r\n    }\r\n  }\r\n}\r\nexport const getNewTile = tiles => {\r\n  const random = Math.floor(Math.random() * tiles.length);\r\n  const newTile = tiles[random];\r\n  return newTile;\r\n};","import React, { useState} from 'react'\r\n\r\nconst CellMeeple = ({i, p, phase, selectedMeeple, placeMeeple, currentCell, setTemp, temp, meeple, selectMeeple, removeMeeple, cell, currentPlayer}) => {\r\n\r\n  const [onHover, setOnHover] = useState(false)\r\n  const [selected, setSelected] = useState(false)\r\n\r\n  const handleClick = () => {\r\n    if(!temp) {\r\n      setSelected(true)\r\n      setTemp(true)\r\n    }\r\n    if(temp && selected) {\r\n      setSelected(false)\r\n      setTemp(false)\r\n    }\r\n    if(temp && !selected) {\r\n      return\r\n    }\r\n  }\r\n  \r\n  const handleSelectMeeple = () => {\r\n    setSelected(!selected)\r\n    selectMeeple(p)\r\n  }\r\n\r\n  const handlePlaceMeeple = (e) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    placeMeeple(selectedMeeple, p)\r\n    setSelected(false)\r\n  }\r\n  const handleRemoveMeeple = (e) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    removeMeeple(selectedMeeple, cell)\r\n    setSelected(false)\r\n  }\r\n  return (\r\n    <div \r\n      className={`p p${i}`}\r\n      onMouseEnter={phase === 'placeMeeple' && currentCell? () => setOnHover(true) : null}\r\n      onMouseLeave={phase === 'placeMeeple' && currentCell? () => setOnHover(false) : null}\r\n      style={{backgroundImage: (!temp && onHover) || selected ? `url(${selectedMeeple?.img})`: p?.img ? `url(${p.img})` : ''}}\r\n      onClick={phase === 'placeMeeple' && currentCell && selectedMeeple?.img ? handleClick : phase === 'removeMeeple' && p.img ? () => handleSelectMeeple(p) : null}\r\n    >\r\n    {phase === 'placeMeeple' && selected && <button style={{background: `${currentPlayer.color}`}}onClick={handlePlaceMeeple} className='btn-place-meeple'>Place Meeple</button>}\r\n    {phase === 'removeMeeple' && selected && <button style={{background: `${currentPlayer.color}`}}onClick={handleRemoveMeeple} className='btn-remove-meeple'>Remove Meeple</button>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CellMeeple\r\n","import React, {useState} from 'react'\r\nimport CellMeeple from './CellMeeple'\r\n\r\nconst Grid = ({positions, currentPlayer, placeMeeple, currentCell, phase, selectedMeeple, meeple, selectMeeple, removeMeeple, cell}) => {\r\n  const [tempSelected, setTempSelected] = useState(false)\r\n  return (\r\n    <div className=\"cell-grid\">\r\n      {positions.map((p, i) => (\r\n        <CellMeeple\r\n          key={i}\r\n          i={i}\r\n          p={p}\r\n          currentCell={currentCell}\r\n          phase={phase}\r\n          selectedMeeple={selectedMeeple}\r\n          placeMeeple={placeMeeple}\r\n          temp={tempSelected}\r\n          setTemp={setTempSelected}\r\n          meeple={meeple}\r\n          selectMeeple={selectMeeple}\r\n          removeMeeple={removeMeeple}\r\n          cell={cell}\r\n          currentPlayer={currentPlayer}\r\n        />))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Grid\r\n","import React, {useEffect, useState} from 'react'\r\nimport {checkRotation, rightShift} from '../utils'\r\nimport Grid from './Grid';\r\n\r\nconst Cell = ({ cell, gameState, isValid, isPlaced, setTempSelected, tempSelected, placeTile, placeMeeple, selectMeeple, removeMeeple }) => {\r\n  const {id, value, borders, positions, img, meeple} = cell;\r\n  const {currentPlayer, currentTile, currentCell, selectedMeeple, phase} = gameState;\r\n  const [onHover, setOnHover] = useState(false)\r\n  const [tempBorders, setTempBorders] = useState([]);\r\n  const [deg, setDeg] = useState(0);\r\n  const [selected, setSelected] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const i = checkRotation(borders, currentTile.borders);\r\n    setDeg(90 * i);\r\n    setTempBorders(rightShift(currentTile.borders, i));\r\n  }, [currentTile, borders]);\r\n\r\n  const handleSelect = () => {\r\n    if(!tempSelected) {\r\n      setSelected(true)\r\n      setTempSelected(true)\r\n    }\r\n    if(tempSelected && selected) {\r\n      setSelected(false)\r\n      setTempSelected(false)\r\n    }\r\n    if(tempSelected && !selected) {\r\n      return\r\n    }\r\n  }\r\n\r\n  const rotate = e => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (value !== 0) {\r\n      return;\r\n    }\r\n    setDeg(prev => prev += 90);\r\n    setTempBorders(prev => rightShift(prev, 1));\r\n  };\r\n\r\n  const handlePlaceTile = (e) => {\r\n    placeTile(id, tempBorders, currentTile.img)\r\n    setSelected(false)\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onMouseEnter={phase === 'position' ? () => setOnHover(true) : null}\r\n      onMouseLeave={phase === 'position' ? () => setOnHover(false) : null}\r\n      onClick={phase ==='position' && isValid ? handleSelect : null}\r\n      className='cell'\r\n      style={{ background: phase ==='position' && isValid && \"black\", opacity: isValid && !selected && !onHover && '0.2'}}\r\n    >\r\n      <div\r\n        className=\"img\"\r\n        style={{ transform: `rotate(${deg}deg)`, backgroundImage: (onHover && isValid) || selected ? `url('tile-images/${currentTile.img}')` : isPlaced && `url('tile-images/${img}')`}}\r\n      />\r\n\r\n      {phase !== 'placeMeeple' && selected && \r\n        <div \r\n          className=\"btn-rotate\"\r\n          onClick={rotate}\r\n          style={{backgroundImage: `url('rotate.png')`}}\r\n        />\r\n      }\r\n\r\n      {phase==='position' && selected && isValid && (\r\n        <button style={{background: `${currentPlayer.color}`}}onClick={handlePlaceTile} className=\"btn-place\">\r\n          place tile\r\n        </button>\r\n      )}\r\n\r\n      <Grid\r\n        meeple={meeple}\r\n        positions={positions}\r\n        currentCell={currentCell.id === id}\r\n        phase={phase}\r\n        selectedMeeple={selectedMeeple}\r\n        placeMeeple={placeMeeple}\r\n        selectMeeple={selectMeeple}\r\n        removeMeeple={removeMeeple}\r\n        cell={cell}\r\n        currentPlayer={currentPlayer}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cell\r\n","import React, {useState} from 'react'\r\nimport Cell from './Cell'\r\n\r\nconst Board = ({gameState, setGameState, selectMeeple}) => {\r\n\r\n  const [tempSelected, setTempSelected] = useState(false)\r\n  \r\n  const placeTile = (id, borders, img) => {\r\n    const top = id - 20;\r\n    const bottom = id + 20;\r\n    const right = id + 1;\r\n    const left = id - 1;\r\n    setGameState(prev => {\r\n      const newBoard = prev.board.map(cell => {\r\n        const cellBorders = cell.borders\r\n        if (cell.id === id) {\r\n          return {\r\n            ...cell,\r\n            value: 1,\r\n            borders: borders,\r\n            img: img\r\n          };\r\n        }\r\n        if ((cell.id === top && cell.value !== 1) || undefined) {\r\n          \r\n          return {\r\n            ...cell,\r\n            borders: [\r\n              ...cellBorders.slice(0, 2),\r\n              borders[0],\r\n              ...cellBorders.slice(3)\r\n            ]\r\n          };\r\n        }\r\n        if ((cell.id === left && cell.value !== 1) || undefined) {\r\n          \r\n          return {\r\n            ...cell,\r\n            borders: [\r\n              ...cellBorders.slice(0, 1),\r\n              borders[3],\r\n              ...cellBorders.slice(2)\r\n            ]\r\n          };\r\n        }\r\n        if ((cell.id === right && cell.value !== 1) || undefined) {\r\n          \r\n          return {\r\n            ...cell,\r\n            borders: [...cellBorders.slice(0, 3), borders[1]]\r\n          };\r\n        }\r\n        if ((cell.id === bottom && cell.value !== 1) || undefined) {\r\n          \r\n          return {\r\n            ...cell,\r\n            borders: [borders[2], ...cellBorders.slice(1)]\r\n          };\r\n        } else {\r\n          return cell;\r\n        }\r\n      });\r\n      return {\r\n        ...prev,\r\n        board: newBoard,\r\n        phase: 'placeMeeple',\r\n        currentCell: newBoard[id]\r\n      };\r\n    });\r\n  };\r\n  const placeMeeple = (meeple, pos) => {\r\n    const {id, img, player} = meeple;\r\n    setGameState(prev => {\r\n      const newBoard = prev.board.map(cell => {\r\n        if (cell.id === prev.currentCell.id) {\r\n          const newPosition = cell.positions.map((p) => {\r\n            if( p.id === pos.id) {\r\n              return {\r\n                ...p,\r\n                id: id,\r\n                img: img,\r\n                player: player\r\n              }\r\n            } else {\r\n              return p\r\n            }\r\n          })\r\n          return {\r\n            ...cell,\r\n            positions: newPosition,\r\n            meeple: true\r\n          };\r\n        } else {\r\n          return cell;\r\n        }\r\n      });\r\n      const newMeeples = prev.players.map(p => {\r\n        if(p.name !== player) {\r\n          return p\r\n        }\r\n        return {\r\n          ...p,\r\n          meeples: p.meeples.filter(m => m.id !== prev.selectedMeeple.id)\r\n        }\r\n      })\r\n      return {\r\n        ...prev,\r\n        board: newBoard,\r\n        players: newMeeples,\r\n        phase: 'removeMeeple',\r\n        selectedMeeple: {}\r\n      };\r\n    });\r\n  }\r\n  const removeMeeple = (meeple, cellMeeple) => {\r\n    const {id, img, player} = meeple;\r\n    setGameState(prev => {\r\n      const newBoard = prev.board.map(cell => {\r\n        if (cell.id === cellMeeple.id) {\r\n          const newPosition = cell.positions.map((p,i) => ({ ...p,id: `p${i}`, img: '', player: ''}))\r\n          return {\r\n            ...cell,\r\n            positions: newPosition,\r\n            meeple: false\r\n          };\r\n        } else {\r\n          return cell;\r\n        }\r\n      });\r\n      const newMeeples = prev.players.map((p) => {\r\n        if(p.name === player) {\r\n          return {\r\n            ...p,\r\n            meeples: [...p.meeples, {id: id, img: img, player: player}]\r\n          }\r\n        } else {\r\n          return p\r\n        }\r\n      })\r\n     \r\n      return {\r\n        ...prev,\r\n        board: newBoard,\r\n        players: newMeeples,\r\n        selectedMeeple: {},\r\n      };\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"grid\">\r\n        {gameState.board.map(cell => (\r\n          <Cell\r\n            key={cell.id}\r\n            cell={cell}\r\n            tempSelected={tempSelected}\r\n            setTempSelected={setTempSelected}\r\n            placeTile={placeTile}\r\n            placeMeeple={placeMeeple}\r\n            removeMeeple={removeMeeple}\r\n            selectMeeple={selectMeeple}\r\n            isPlaced={gameState.placedTiles.includes(cell)}\r\n            isValid={gameState.emptyCells.includes(cell)}\r\n            gameState={gameState}\r\n          />\r\n        ))}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Board\r\n","import React, {useState, useEffect} from 'react'\r\n\r\nconst Meeple = ({meeple, temp, setTemp, selectMeeple, players, phase, currentPlayer, player}) => {\r\n\r\n  const [selected, setSelected] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setSelected(false)\r\n    setTemp(false)\r\n  }, [players, currentPlayer, setTemp])\r\n\r\n  const handleClick = () => {\r\n    if(!temp) {\r\n      setSelected(true)\r\n      setTemp(true)\r\n      selectMeeple(meeple)\r\n    }\r\n    if(temp && selected) {\r\n      setSelected(false)\r\n      setTemp(false)\r\n      selectMeeple({})\r\n    }\r\n    if(temp && !selected) {\r\n      return\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div onClick={phase === 'placeMeeple' && player.name === currentPlayer.name ? handleClick : null}>\r\n      <img style={{transform: selected && 'scale(1.2)'}} className={`meeple`} src={meeple.img} alt=\"meeple\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Meeple\r\n","import React, {useState} from 'react'\r\nimport Meeple from './Meeple'\r\n\r\nconst Player = ({player, gameState, selectMeeple}) => {\r\n  const [tempSelected, setTempSelected] = useState(false)\r\n  \r\n  return (\r\n    <div className='player' style={{border: player.name === gameState.currentPlayer.name && `0.4rem solid ${player.color}`}}>\r\n      <h6>{player.name}</h6>\r\n      <div className=\"meeples\">\r\n        {player.meeples.map(meeple => (\r\n          <Meeple\r\n            key={meeple.id} \r\n            players={gameState.players} \r\n            currentPlayer={gameState.currentPlayer}\r\n            player={player}\r\n            phase={gameState.phase}\r\n            meeple={meeple}\r\n            temp={tempSelected}\r\n            setTemp={setTempSelected}\r\n            selectMeeple={selectMeeple}\r\n          />))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Player\r\n","\nimport React, { useState, useEffect } from \"react\";\nimport {getNewTile, findEmpty, valid} from './utils';\nimport Board from './components/Board';\nimport Player from './components/Player';\nimport \"./App.css\";\n\nconst tiles = [\n  { borders: \"gggg\", img: \"cloister.png\" },\n  { borders: \"gggg\", img: \"cloister.png\" },\n  { borders: \"gggg\", img: \"cloister.png\" },\n  { borders: \"gggg\", img: \"cloister.png\" },\n  { borders: \"ggrg\", img: \"cloisterr.png\" },\n  { borders: \"ggrg\", img: \"cloisterr.png\" },\n  { borders: \"cccc\", img: \"city4.png\" },\n  { borders: \"ccgc\", img: \"city3.png\" },\n  { borders: \"ccgc\", img: \"city3.png\" },\n  { borders: \"ccgc\", img: \"city3.png\" },\n  { borders: \"ccgc\", img: \"city3s.png\" },\n  { borders: \"ccrc\", img: \"city3r.png\" },\n  { borders: \"ccrc\", img: \"city3sr.png\" },\n  { borders: \"ccrc\", img: \"city3sr.png\" },\n  { borders: \"cggc\", img: \"city2nw.png\" },\n  { borders: \"cggc\", img: \"city2nw.png\" },\n  { borders: \"cggc\", img: \"city2nw.png\" },\n  { borders: \"cggc\", img: \"city2nws.png\" },\n  { borders: \"cggc\", img: \"city2nws.png\" },\n  { borders: \"crrc\", img: \"city2nwr.png\" },\n  { borders: \"crrc\", img: \"city2nwr.png\" },\n  { borders: \"crrc\", img: \"city2nwr.png\" },\n  { borders: \"crrc\", img: \"city2nwsr.png\" },\n  { borders: \"crrc\", img: \"city2nwsr.png\" },\n  { borders: \"gcgc\", img: \"city2we.png\" },\n  { borders: \"gcgc\", img: \"city2wes.png\" },\n  { borders: \"gcgc\", img: \"city2wes.png\" },\n  { borders: \"ccgg\", img: \"city11ne.png\" },\n  { borders: \"ccgg\", img: \"city11ne.png\" },\n  { borders: \"gcgc\", img: \"city11we.png\" },\n  { borders: \"gcgc\", img: \"city11we.png\" },\n  { borders: \"gcgc\", img: \"city11we.png\" },\n  { borders: \"cggg\", img: \"city1.png\" },\n  { borders: \"cggg\", img: \"city1.png\" },\n  { borders: \"cggg\", img: \"city1.png\" },\n  { borders: \"cggg\", img: \"city1.png\" },\n  { borders: \"cggg\", img: \"city1.png\" },\n  { borders: \"cgrr\", img: \"city1rsw.png\" },\n  { borders: \"cgrr\", img: \"city1rsw.png\" },\n  { borders: \"cgrr\", img: \"city1rsw.png\" },\n  { borders: \"crrg\", img: \"city1rse.png\" },\n  { borders: \"crrg\", img: \"city1rse.png\" },\n  { borders: \"crrg\", img: \"city1rse.png\" },\n  { borders: \"crrr\", img: \"city1rswe.png\" },\n  { borders: \"crrr\", img: \"city1rswe.png\" },\n  { borders: \"crrr\", img: \"city1rswe.png\" },\n  { borders: \"crgr\", img: \"city1rwe.png\" },\n  { borders: \"crgr\", img: \"city1rwe.png\" },\n  { borders: \"crgr\", img: \"city1rwe.png\" },\n  { borders: \"crgr\", img: \"city1rwe.png\" },\n  { borders: \"rgrg\", img: \"road2ns.png\" },\n  { borders: \"rgrg\", img: \"road2ns.png\" },\n  { borders: \"rgrg\", img: \"road2ns.png\" },\n  { borders: \"rgrg\", img: \"road2ns.png\" },\n  { borders: \"rgrg\", img: \"road2ns.png\" },\n  { borders: \"rgrg\", img: \"road2ns.png\" },\n  { borders: \"rgrg\", img: \"road2ns.png\" },\n  { borders: \"rgrg\", img: \"road2ns.png\" },\n  { borders: \"ggrr\", img: \"road2sw.png\" },\n  { borders: \"ggrr\", img: \"road2sw.png\" },\n  { borders: \"ggrr\", img: \"road2sw.png\" },\n  { borders: \"ggrr\", img: \"road2sw.png\" },\n  { borders: \"ggrr\", img: \"road2sw.png\" },\n  { borders: \"ggrr\", img: \"road2sw.png\" },\n  { borders: \"ggrr\", img: \"road2sw.png\" },\n  { borders: \"ggrr\", img: \"road2sw.png\" },\n  { borders: \"ggrr\", img: \"road2sw.png\" },\n  { borders: \"grrr\", img: \"road3.png\" },\n  { borders: \"grrr\", img: \"road3.png\" },\n  { borders: \"grrr\", img: \"road3.png\" },\n  { borders: \"grrr\", img: \"road3.png\" },\n  { borders: \"rrrr\", img: \"road4.png\" }\n].map((x, i) => ({ ...x, id: i, borders: x.borders.split(\"\") }));\n\nconst board = new Array(400)\n  .fill()\n  .map((x, i) => ({\n    id: i,\n    value: 0,\n    borders: [0, 0, 0, 0],\n    positions: [0,0,0,0,0,0,0,0,0].map((m,i) => ({id: `p${i}`, img: '', player: ''})),\n    img: \"\",\n    meeple: false\n  }))\n  .map(cell => {\n    if (cell.id === 189) {\n      return {\n        ...cell,\n        value: 1,\n        borders: [\"c\", \"r\", \"g\", \"r\"],\n        img: \"city1rwe.png\"\n      };\n    }\n    if (cell.id === 169) {\n      return {\n        ...cell,\n        borders: [0, 0, \"c\", 0]\n      };\n    }\n    if (cell.id === 190) {\n      return {\n        ...cell,\n        borders: [0, 0, 0, \"r\"]\n      };\n    }\n    if (cell.id === 209) {\n      return {\n        ...cell,\n        borders: [\"g\", 0, 0, 0]\n      };\n    }\n    if (cell.id === 188) {\n      return {\n        ...cell,\n        borders: [0, \"r\", 0, 0]\n      };\n    } else {\n      return cell;\n    }\n  });\n\nconst players = [{\n  name: 'player 1',\n  color: '#0b5394',\n  meeples: [0,0,0,0,0,0,0].map((m,i) => ({id: `m${i}`, img: 'meeple-blue.png', player: 'player 1', color: 'blue'})),\n}, {\n  name: 'player 2',\n  color: '#cc0000',\n  meeples: [0,0,0,0,0,0,0].map((m,i) => ({id: `m${i}`, img: 'meeple-red.png', player: 'player 2', color: 'red'})),\n}]\n\nconst initialState = {\n  currentTile: getNewTile(tiles),\n  tileSet: tiles,\n  board: board,\n  placedTiles: [],\n  emptyCells: [],\n  selectedMeeple: null,\n  currentPlayer: players[0],\n  currentCell: {},\n  players: players,\n  phases: ['position', 'placeMeeple', 'removeMeeple'],\n  phase: 'position'\n};\n\nexport default function App() {\n  const [gameState, setGameState] = useState(initialState);\n  \n  useEffect(\n    () => {\n      setGameState(prev => {\n        const placed = prev.board.filter(cell => cell.value === 1);\n        const empty = findEmpty(placed, prev.board).filter(cell =>\n          valid(cell, gameState.currentTile)\n        );\n        return {\n          ...prev,\n          placedTiles: placed,\n          emptyCells: empty,\n        };\n      })\n      },\n    [gameState.board, gameState.currentTile]\n  );\n  \n  const selectMeeple = (meeple) => {\n    setGameState(prev => ({...prev, selectedMeeple: meeple}))\n  }\n  const endTurn = () => {\n    setGameState(prev => {\n      if(prev.tileSet.length === 0) {\n        return {\n          ...prev,\n          phase: 'gameOver',\n          tileSet: []\n        }\n      }\n      const newTile = {...getNewTile(prev.tileSet)};\n      const newTileSet = prev.tileSet.filter(tile => tile.id !== newTile.id)\n      const changePlayer = prev.currentPlayer.name === 'player 1' ? {...prev.players[1]} : {...prev.players[0]}\n      return {\n        ...prev,\n        currentTile: newTile,\n        tileSet: newTileSet,\n        currentPlayer: changePlayer,\n        selectedMeeple: {},\n        currentCell: {},\n        phase: 'position'\n      }\n    })\n  }\n  const newTile = () => {\n    setGameState(prev => ({...prev, currentTile: getNewTile(tiles)}))\n  }\n  const skipPlaceMeeplePhase = () => {\n    setGameState(prev => ({...prev, phase: 'removeMeeple'}))\n  }\n  \n  return (\n    <div className='app'>\n      {gameState.phase === 'gameOver' && (\n        <div className=\"game-over\">\n          <h1>Game Over</h1>\n        </div>\n      )}\n      {gameState.emptyCells.length === 0 && <button style={{background: `${gameState.currentPlayer.color}`}} onClick={newTile}>New Tile</button>}\n      {gameState.phase !== 'position' && <button style={{background: `${gameState.currentPlayer.color}`}} className='btn-end' onClick={endTurn}>end turn</button>}\n      {gameState.phase === 'placeMeeple' && <button style={{background: `${gameState.currentPlayer.color}`}} className='btn-skip' onClick={skipPlaceMeeplePhase}>Next Phase</button>}\n      <div className=\"current-tile-container\">\n        <h4>{gameState.tileSet.length}</h4>\n        <img style={{border: `0.4rem solid ${gameState.currentPlayer.color}`}} className='current-tile' alt='tile' src={`tile-images/${gameState.currentTile.img}`}/>\n      </div>\n      <Board gameState={gameState} setGameState={setGameState} selectMeeple={selectMeeple}/>\n      <div className=\"players\">\n      {gameState.players.map(player => <Player key={player.name} player={player} gameState={gameState} setGameState={setGameState} selectMeeple={selectMeeple}/>)}\n      </div>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}